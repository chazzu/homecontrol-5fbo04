name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '16.x'
  COVERAGE_THRESHOLD: '80'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run dependency vulnerability scan
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate

  frontend-build:
    runs-on: ubuntu-latest
    needs: security-scan
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'src/web/package-lock.json'

      - name: Install dependencies
        working-directory: src/web
        run: npm ci

      - name: Run ESLint
        working-directory: src/web
        run: npm run lint

      - name: Type check
        working-directory: src/web
        run: npm run typecheck

      - name: Run tests with coverage
        working-directory: src/web
        run: npm run test:coverage
        env:
          CI: true
          NODE_ENV: test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: src/web/coverage
          flags: frontend

      - name: Build frontend
        working-directory: src/web
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: src/web/dist
          retention-days: 7

  backend-build:
    runs-on: ubuntu-latest
    needs: security-scan
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'src/backend/package-lock.json'

      - name: Install dependencies
        working-directory: src/backend
        run: npm ci

      - name: Run ESLint
        working-directory: src/backend
        run: npm run lint

      - name: Type check
        working-directory: src/backend
        run: npm run build -- --noEmit

      - name: Run tests with coverage
        working-directory: src/backend
        run: npm run test:coverage
        env:
          CI: true
          NODE_ENV: test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: src/backend/coverage
          flags: backend

      - name: Build backend
        working-directory: src/backend
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: src/backend/dist
          retention-days: 7

  notify:
    needs: [frontend-build, backend-build]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check build status
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1